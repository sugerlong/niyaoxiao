package com.zxl.app.db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
public class DBUtil {
  public static Connection getCon(){
        Connection con=null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://w.rdc.sae.sina.com.cn:3307/app_suger";
            String user="kwn5j443w3";    //获取AccessKey,不需要自己填写
            String password="wkx5x205zhy44zkkjkhl3yy135i02mzwjm40j4l0"; //获取SecretKey
            con=DriverManager.getConnection(url,user,password);
        }catch(ClassNotFoundException e){
            e.printStackTrace();
        }catch(SQLException e){
            e.printStackTrace();
        }
        return con;
    }   
 public static Statement createStat(Connection con){
    Statement stat=null;
    try{
        stat=con.createStatement();
    }catch(SQLException e){
        e.printStackTrace();
    }
    return stat;
  } 
  public static ResultSet executeQuery(Statement stat,String sql){
    ResultSet rs=null;
    try{
        rs=stat.executeQuery(sql);
    }catch(SQLException e){
        e.printStackTrace();
    }
    return rs;
  }
    public static int executeUpdate(Connection con, String sql) {
        int ret = 0;
        Statement stmt = null;
        try {
            stmt = con.createStatement();
            ret = stmt.executeUpdate(sql);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close(stmt);
        }
        return ret;
    }
  public static PreparedStatement preparedStat(Connection con,String sql){
    PreparedStatement pStat=null;
    try{
        pStat=con.prepareStatement(sql);
    }catch(SQLException e){
        e.printStackTrace();
    }
    return pStat;   
  }
  public static PreparedStatement preparedStat(Connection con,String sql,int autoGeneratedKeys){
    PreparedStatement pStat=null;
    try{
        pStat=con.prepareStatement(sql,autoGeneratedKeys);  
    }catch(SQLException e){
        e.printStackTrace();
    }
    return pStat;
  }
  public static void close(Connection con){
    try{
        if(con!=null){
             con.close();
             con=null;
        }
    }catch(SQLException e){
        e.printStackTrace();
    }
  }

  public static void close(Statement stat){
    try{
        if(stat!=null){
            stat.close();
            stat=null;
        }
    }catch(SQLException e){
        e.printStackTrace();
    }
  }

  public static void close(ResultSet rs){
    try{
        if(rs!=null){
            rs.close();
            rs=null;
        }
    }catch(SQLException e){
        e.printStackTrace();
    }
  }
}
